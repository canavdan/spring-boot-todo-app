<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.4.3.RELEASE</version>
  </parent>
  <name>spring boot sample - root</name>
  <groupId>com.thorpora</groupId>
  <artifactId>spring-boot-sample</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <organization>
    <name>Thorpora</name>
    <url>http://thorpora.fr</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>epi</id>
      <name>Yannick Lacaute</name>
      <email>yannick.lacaute at gmail dot com</email>
      <roles>
        <role>Developer</role>
      </roles>
    </developer>
  </developers>
  <modules>
    <module>app-gateway</module>
  </modules>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- PROPERTIES CONFIGURATION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <properties>
    <!-- GENERAL -->
    <!--<main.basedir>${basedir}</main.basedir>-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-failsafe-plugin.version>2.18</maven-failsafe-plugin.version>

    <!-- CORE -->
    <javax.inject.version>1</javax.inject.version>

    <!-- SPRING -->
    <spring-boot.version>1.4.2.RELEASE</spring-boot.version>

    <!-- UTILS -->
    <commons-lang3.version>3.4</commons-lang3.version>

    <!-- DATABASE -->
    <postgresql.version>9.4-1201-jdbc41</postgresql.version>
    <h2db.version>1.4.193</h2db.version>

    <!-- SONAR CONFIGURATION -->
    <!-- mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Dmaven.test.failure.ignore=true -->
    <!--<jacoco.version>0.7.8</jacoco.version>-->
    <!--<sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>-->
    <!--<sonar.dryRun.readTimeout>60</sonar.dryRun.readTimeout>-->
    <!--<sonar.preview.readTimeout>60</sonar.preview.readTimeout>-->
    <!--<sonar.language>java</sonar.language>-->
    <!--<sonar.java.binaries>target/classes,target/test-classes</sonar.java.binaries>-->
    <!--<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>-->
    <!--<sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>-->
    <!--<sonar.language>java</sonar.language>-->
    <!--<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>-->
    <!--<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>-->
  </properties>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- REPOSITORIES CONFIGURATION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <repositories>
  </repositories>

  <!-- ~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- PROFILE CONFIGURATION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~ -->
  <profiles>
    <!-- Development profile : skip all IT -->
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <skipITs>true</skipITs>
      </properties>
    </profile>
    <!-- Integration profile : only IT on mocked server -->
    <profile>
      <id>int</id>
      <properties>
        <it.categories>com.thorpora.test.env.MockedServletCategory</it.categories>
      </properties>
    </profile>
    <!-- Production profile : all IT -->
    <profile>
      <id>prod</id>
      <properties>
        <it.category>
          com.thorpora.test.env.MockedServletCategory,
          com.thorpora.test.env.ServletCategory
        </it.category>
      </properties>
    </profile>
  </profiles>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- DEPENDENCIES CONFIGURATION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <dependencyManagement>
    <dependencies>
      <!-- UTILS -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- DATABASE -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <!-- embedded database drivers -->
      <!--
      <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2db.version}</version>
          <scope>runtime</scope>
      </dependency>
      -->
    </dependencies>
  </dependencyManagement>

  <!-- ~~~~~~~~~~~~~~~~~~~ -->
  <!-- COMMON DEPENDENCIES -->
  <!-- ~~~~~~~~~~~~~~~~~~~ -->
  <dependencies>
    <!-- Java Inject instead of Autowired -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${javax.inject.version}</version>
    </dependency>
    <!-- Spring web framework -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- Spring Data and JPA -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <!-- Mail tools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <!-- Thymeleaf template engine (mail template) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <!-- Spring Test tools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- ~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- PLUGINS CONFIGURATION -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~ -->
  <build>

    <pluginManagement>
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~ -->
      <!-- COMPILATION CONFIGURATION -->
      <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~ -->


      <plugins>
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- UNIT TESTS CONFIGURATION [GOAL TEST] -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!--
            SureFire is used by default but defining it allow to specify a configuration

            [*]: test

            To run a single test: mvn -Dtest=MyTest test
            To skip all: -DskipTests
        -->
        <!--
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <parallel>methods</parallel>
            <threadCount>4</threadCount>
            <argLine>-Xmx1G -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled </argLine> ${jacoco.agent.ut.arg}
            <excludes>
              <exclude>**/*IntegrationTest*</exclude>
            </excludes>
          </configuration>
        </plugin>
        -->

        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!-- INTEGRATION TESTS CONFIGURATION [GOAL VERIFY] -->
        <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
        <!--
            FailSafe allow to continue tests when some fails in order to have a full report.

            [ ]pre-integration-test : set up the integration test environment.
            [*]integration-test : run the integration tests.
            [ ]post-integration-test : tear down the integration test environment.
            [*]verify : check the results of the integration tests.

            To run a single test: mvn -Dit.test=MyIT verify
            To skip all: -DskipITs
        -->
        <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-failsafe-plugin</artifactId>-->
        <!--<version>${maven-failsafe-plugin.version}</version>-->

        <!--</plugin>-->


        <!--<plugin>-->
        <!--<groupId>org.jacoco</groupId>-->
        <!--<artifactId>jacoco-maven-plugin</artifactId>-->
        <!--<version>${jacoco.version}</version>-->
        <!--</plugin>-->


        <!--<plugin>-->
        <!--<groupId>org.jacoco</groupId>-->
        <!--<artifactId>jacoco-maven-plugin</artifactId>-->
        <!--<version>${jacoco.version}</version>-->
        <!--<executions>-->
        <!--<execution>-->
        <!--<id>prepare-ut-agent</id>-->
        <!--<phase>process-test-classes</phase>-->
        <!--<goals>-->
        <!--<goal>prepare-agent</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<destFile>${sonar.jacoco.reportPath}</destFile>-->
        <!--<propertyName>jacoco.agent.ut.arg</propertyName>-->
        <!--<append>true</append>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--<execution>-->
        <!--<id>prepare-it-agent</id>-->
        <!--<phase>package</phase>-->
        <!--<goals>-->
        <!--<goal>prepare-agent-integration</goal>-->
        <!--</goals>-->
        <!--<configuration>-->
        <!--<destFile>${sonar.jacoco.itReportPath}</destFile>-->
        <!--<propertyName>jacoco.agent.it.arg</propertyName>-->
        <!--<append>true</append>-->
        <!--</configuration>-->
        <!--</execution>-->
        <!--</executions>-->
        <!--</plugin>-->

        <!--<plugin>-->
        <!--<groupId>org.codehaus.mojo</groupId>-->
        <!--<artifactId>sonar-maven-plugin</artifactId>-->
        <!--<version>${sonar-maven-plugin.version}</version>-->
        <!--</plugin>-->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

      <!--<plugin>-->
      <!--<groupId>org.jacoco</groupId>-->
      <!--<artifactId>jacoco-maven-plugin</artifactId>-->
      <!--<executions>-->
      <!--<execution>-->
      <!--<id>pre-unit-test</id>-->
      <!--<goals>-->
      <!--<goal>prepare-agent</goal>-->
      <!--</goals>-->
      <!--<configuration>-->
      <!--<destFile>-->
      <!--${sonar.jacoco.utReportPath}-->
      <!--</destFile>-->
      <!--<propertyName>surefireArgLine</propertyName>-->
      <!--</configuration>-->
      <!--</execution>-->
      <!--</executions>-->
      <!--</plugin>-->

  </build>

</project>
